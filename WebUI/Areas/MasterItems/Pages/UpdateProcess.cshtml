@page "{Id}"
@using Microsoft.AspNetCore.Authorization
@using Wbc.Application.Common.Enums
@using Wbc.Application.Common.Helper
@using Wbc.Application.Common.Interfaces
@using Wbc.WebUI.Services
@model Wbc.WebUI.Areas.MasterItems.Pages.UpdateProcessModel
@inject IStringLocalizer<Pages.UpdateProcessModel> Localizer
@inject CommonLocalizationService LocalizationService
@inject ICurrentUserService UserService
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = Localizer["PageName"];

    var canAdd = await AuthorizationService.AuthorizeAsync(User, Policies.CanAddProcessRequiredDocument.GetAttributeStringValue());
}

@section PageName
{
    @Localizer["PageName"]
}

@section BreadCrumbs
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Dashboard">@LocalizationService.Get("DashBoardRes")</a></li>
            <li class="breadcrumb-item"><a href="@Url.Page("ListProcess",new {area="MasterItems"})">@LocalizationService.Get("ListProcessRes")</a></li>
            <li class="breadcrumb-item active" aria-current="page">@LocalizationService.Get("UpdateProcessRes")</li>
        </ol>
    </nav>
}

<div class="card">
    <div class="card-header">
        <div class="col-md-6">
            <div class="form-group">
                @if (canAdd.Succeeded)
                {

                    <a asp-page="AddProcessRequiredDocument" asp-route-id="@Model.Command.Id" class="btn btn-outline-primary btn-lg"><span class="fas fa-fw fa-file-upload"></span> Manage Required Documents</a>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <form asp-page="UpdateRequiredDocument" method="post">
            <div class="col-md-6">
                <input asp-for="Command.Id" type="hidden" />
                <div class="form-group">
                    <label class="col-form-label" asp-for="Command.ProcessName"> @Localizer["ProcessNameColumn"] :</label>
                    <input class="form-control form-control-lg" asp-for="Command.ProcessName" placeholder="@Localizer["ProcessNameColumn"]" />
                    <span class="text-danger" asp-validation-for="Command.ProcessName"></span>
                </div>
                <div class="form-group">
                    <label class="col-form-label" asp-for="Command.ProcessDescription"> @Localizer["ProcessDescriptionColumn"] :</label>
                    <input asp-for="Command.ProcessDescription" placeholder="@Localizer["ProcessDescriptionColumn"]" class="form-control form-control-lg" />
                    <span class="text-danger" asp-validation-for="Command.ProcessDescription"></span>
                </div>
                <div class="form-group">
                    <label class="col-form-label" asp-for="Command.ProcessCode"> @Localizer["ProcessCodeColumn"] :</label>
                    <input asp-for="Command.ProcessCode" class="form-control form-control-lg" placeholder="@Localizer["ProcessCodeColumn"]" />
                    <span class="text-danger" asp-validation-for="Command.ProcessCode"></span>
                </div>
                @if (UserService.UserHasRole(Roles.TradeHubAdmin))
                {
                    <div class="form-group">
                        <div class="custom-control custom-switch">
                            <input type="checkbox" asp-for="Command.IsInternalUse" class="custom-control-input" />
                            <label class="custom-control-label" asp-for="Command.IsInternalUse"> @Localizer["IsInternalUselbl"]</label>
                        </div>
                        <span class="text-danger" asp-validation-for="Command.IsInternalUse"></span>
                    </div>
                }
                <div class="form-group">
                    <partial name="_FormSubmissionButtonPartial" model="FormSubmissionAction.Update" />
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}