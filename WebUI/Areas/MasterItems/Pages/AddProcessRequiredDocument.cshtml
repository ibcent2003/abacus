@page "{id}"
@using Microsoft.AspNetCore.Authorization
@using Wbc.Application.Common.Enums
@using Wbc.Application.Common.Helper
@using Wbc.WebUI.Services
@model Wbc.WebUI.Areas.MasterItems.Pages.AddProcessRequiredDocumentModel
@inject IStringLocalizer<Pages.AddProcessRequiredDocumentModel> Localizer
@inject CommonLocalizationService LocalizationService
@inject IAuthorizationService AuthorizationService

@section Css
{

    <link href="~/lib/Select2/css/select2-bootstrap.css" rel="stylesheet" />
    <link href="~/lib/Select2/css/select2.css" rel="stylesheet" />

}

@{
    ViewData["Title"] = Localizer["PageTitle"];
    var canDelete = await AuthorizationService.AuthorizeAsync(User, Policies.CanDeleteProcessRequiredDocument.GetAttributeStringValue());
}


@section PageName
{
    @Localizer["PageName"]
}


@section BreadCrumbs
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Dashboard">@LocalizationService.Get("DashBoardRes")</a></li>
            <li class="breadcrumb-item"><a href="@Url.Page("ListProcess",new {area="MasterItems"})">@LocalizationService.Get("ListProcessRes")</a></li>
            <li class="breadcrumb-item"><a asp-page="updateprocess" asp-route-id="@Model.Command.ProcessId">@Model.Command.ProcessName</a></li>
            <li class="breadcrumb-item active" aria-current="page">@LocalizationService.Get("AddProcessRequiredDocumentRes")</li>
        </ol>
    </nav>
}

<div class="card">
    <div class="card-header">
        <h5 class="card-title">@Localizer["FormHeader"]</h5>
    </div>
    <div class="card-body">
        <form asp-page="AddProcessRequiredDocument" method="post">
            <input type="hidden" asp-for="Command.ProcessId" />
            <input type="hidden" asp-for="Command.IsInternalUse" />
            <input type="hidden" asp-for="Command.ProcessName" />
            <input type="hidden" asp-for="Command.SubscriberId" />
            <input type="hidden" asp-for="Command.ProcessCode" />
            <div class="col-md-6">
                <div class="form-group form-group-lg">
                    <label class="col-form-label" asp-for="Command.RequiredDocumentId"> @Localizer["RequiredDocumentIdlbl"] :</label>
                    <select class="form-control form-control-lg" asp-for="Command.RequiredDocumentId" asp-items="Model.RequiredDocumentList">
                        <option value="">@LocalizationService.Get("SelectListDefaultValue")</option>
                    </select>
                    <span class="text-danger" asp-validation-for="Command.RequiredDocumentId"></span>
                </div>
                <div class="form-group">
                    <div class="custom-control custom-switch">
                        <input type="checkbox" asp-for="Command.Mandatory" class="custom-control-input" placeholder="@Localizer["Mandatorylbl"]" />
                        <label class="custom-control-label" asp-for="Command.Mandatory"> @Localizer["Mandatorylbl"]</label>
                    </div>
                    <span class="text-danger" asp-validation-for="Command.Mandatory"></span>
                </div>
                <div class="form-group">
                    <partial name="_FormSubmissionButtonPartial" model="FormSubmissionAction.Create" />
                </div>
            </div>
        </form>
    </div>
</div>
<div class="card">
    <div class="card-header">
        <h3>@Localizer["Required Documents"]</h3>
    </div>
    <div class="card-body">
        <div class="table table-responsive">
            <table id="resources" class="table table-striped table-condensed" style="width: 100%">
                <thead>
                <tr>
                    <th>
                        S/N
                    </th>
                    <th>
                        @Localizer["RequiredDocumentNameColumn"]
                    </th>
                    <th>
                        @Localizer["AllowedFormatColumn"]
                    </th>
                    <th>
                        @Localizer["MandatoryColumn"]
                    </th>

                    @if (canDelete.Succeeded)
                        {

                            <th></th>
                        }
                </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/Select2/js/select2.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/DataTables/datatables.js"></script>


    <script>
        var placeholder = '@LocalizationService.Get("SelectListDefaultValue")';

        $(document).ready(function () {
            $('#Command_RequiredDocumentId').select2({
                placeholder: placeholder,
                theme: "bootstrap"
                
            });
        });


        $(document).ready(function () {


            var canDelete = @canDelete.Succeeded.ToString().ToLower();
            var deleteBtnlbl = '@LocalizationService.Get("DataTableDeleteBtnlbl")';
            var mandatorylbl = '@LocalizationService.Get("Mandatorylbl")';
            var processId = document.getElementById("Command_ProcessId").value;
            var organisationId = document.getElementById("Command_SubscriberId").value;
            var columns = [
                { "data": "id", "orderable": false },
                { "data": "documentName", "orderable": false },
                { "data": "allowedFormats", "orderable": false },
                {
                    "data": "mandatory",
                    "orderable": false,
                    "sClass": "text-center",
                    "render": function (data, type, row) {
                        if (data) {
                            return '<div class="custom-control custom-switch"><input type="checkbox" class="custom-control-input" checked="true"><label class="custom-control-label">' + mandatorylbl + '</label></div>';
                        } else {
                            return '<div class="custom-control custom-switch"><input type="checkbox" class="custom-control-input"><label class="custom-control-label">' + mandatorylbl + '</label></div>';
                        }
                    }
                }

            ];


            if (canDelete)
            {
                columns.push({
                    "data": "id", "orderable": false, "sClass": "text-center", "render": function(data, type, row)
                    {
                        return '<a  href="/MasterItems/DeleteProcessRequiredDocument/' + data + '"><i class="text-danger fas fa-trash"></i> ' + deleteBtnlbl + ' </a>';
                    }
                });
            }

            $('#resources').DataTable({
                "processing": true,
                "serverSide": true,
                "responsive" : true,
                "info": true,
                "stateSave": true,
                "lengthMenu":
                [
                    [10, 20, 50, -1], [10, 20, 50, "All"]
                ],
                "ajax": {
                    "url":
                        '/MasterItems/ListProcessRequiredDocument',
                    "type": "POST",
                    "data": { processId: processId, organisationId: organisationId},
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    }
                },
                "fnRowCallback": function(nRow, aData, iDisplayIndex)
                {

                    $("td:first", nRow).html(iDisplayIndex + 1 + this.api().page.info().start);

                    return nRow;
                },
                "columns": columns,
                "order": [[1, "asc"]]
            });
        });


    </script>
}